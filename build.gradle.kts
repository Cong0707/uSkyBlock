/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    `maven-publish`
    kotlin("jvm") version "2.1.10"
}

subprojects {
    apply(plugin = "kotlin")
    dependencies {
        api(rootProject)
        api(kotlin("script-runtime"))
        kotlinScriptDef(rootProject)
    }
}

allprojects {
    repositories {
        gradlePluginPortal()
        mavenLocal()
        mavenCentral()
        maven("https://hub.spigotmc.org/nexus/content/repositories/public")
        maven("https://papermc.io/repo/repository/maven-public/")
        maven("https://maven.enginehub.org/repo/")
        maven("https://oss.sonatype.org/content/repositories/snapshots/")
        maven("https://repo.codemc.org/repository/maven-public")
        maven("https://repo.mvdw-software.com/content/groups/public/")
        maven("https://www.uskyblock.ovh/maven/dependencies/")
        maven("https://www.uskyblock.ovh/maven/uskyblock/")
        maven("https://repo.maven.apache.org/maven2/")
        maven("https://hub.spigotmc.org/nexus/content/repositories/snapshots/")

        maven("https://repo.onarandombox.com/content/groups/public")
        maven("https://hub.spigotmc.org/nexus/content/groups/public/")
        maven("https://jitpack.io")
        maven("https://repo.minebench.de/")
        maven("https://repo.maven.apache.org/maven2/")
    }

    java.sourceCompatibility = JavaVersion.VERSION_21
    java.targetCompatibility = JavaVersion.VERSION_21
    kotlin.jvmToolchain(21)

    tasks.withType<Test>().configureEach {
        enabled = false
    }
}

dependencies {
    implementation("org.jetbrains:annotations:23.0.0")
    implementation("net.milkbowl.vault:VaultAPI:1.7")
    implementation("io.papermc:paperlib:1.0.8")
    implementation("org.bstats:bstats-bukkit:3.0.1")
    implementation("com.google.inject:guice:7.0.0")
    compileOnly("net.milkbowl.vault:VaultAPI:1.7")
    compileOnly("io.papermc.paper:paper-api:1.21.5-R0.1-SNAPSHOT")
    compileOnly("com.onarandombox.multiversecore:Multiverse-Core:4.3.1")
    compileOnly("com.onarandombox.multiverseinventories:Multiverse-Inventories:4.2.3")
    compileOnly("com.sk89q.worldedit:worldedit-bukkit:7.2.19")
    compileOnly("com.sk89q.worldguard:worldguard-bukkit:7.0.9")
    compileOnly("com.google.guava:guava:33.1.0-jre")
    compileOnly("com.google.code.gson:gson:2.10.1")
    compileOnly("be.maximvdw:MVdWPlaceholderAPI:3.0.1-SNAPSHOT") {
        exclude("*", "*")
    }
    compileOnly("net.kyori:adventure-api:4.16.0")
    compileOnly("net.kyori:adventure-platform-bukkit:4.3.2")
    compileOnly("org.apache.commons:commons-lang3:3.14.0")
    compileOnly("org.apache.commons:commons-text:1.12.0")
    compileOnly("org.apache.httpcomponents:httpclient:4.5.14")
    compileOnly("org.apache.maven:maven-artifact:3.8.6")
    testImplementation("org.hamcrest:hamcrest:2.2")
    testImplementation("org.hamcrest:hamcrest-library:2.2")
    testImplementation("junit:junit:4.13.2")
    testImplementation("org.junit.vintage:junit-vintage-engine:5.9.0")
    testImplementation("org.mockito:mockito-core:5.14.2")
    testImplementation("com.sk89q.worldedit:worldedit-bukkit:7.2.19")
    testImplementation("org.junit.vintage:junit-vintage-engine:5.9.0")
    testImplementation("org.hamcrest:hamcrest:2.2")
    testImplementation("org.hamcrest:hamcrest-library:2.2")
    testImplementation("org.hamcrest:hamcrest-core:1.3")
    testImplementation("org.hamcrest:hamcrest-library:1.3")
    testImplementation("org.mockito:mockito-core:5.14.2")
    testImplementation("com.google.code.gson:gson:2.8.9")
}

group = "ovh.uskyblock"
version = "3.2.0-SNAPSHOT"

publishing {
    publications.create<MavenPublication>("maven") {
        from(components["java"])
    }
}

tasks.withType<JavaCompile>() {
    options.encoding = "UTF-8"
}
